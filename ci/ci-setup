#!/usr/bin/env bash
#
# GitHub Actions Scripts
# Copyright (C) 2021-2022 by Thomas Dreibholz
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Contact: dreibh@iem.uni-due.de

# Bash options:
set -e

UNAME=`uname`
USE_PACKAGING=0

while [ $# -gt 0 ] ; do
   if [ "$1" == "package" ] ; then
      USE_PACKAGING=1
   fi
   shift
done


# ###### Linux ##############################################################
if [ "${UNAME}" == "Linux" ] ; then

   # NOTE: lsb_release may not be installed, yet!
   # => Guess distribution by checking for the packaging tool.

   # ====== Ubuntu/Deban ====================================================
   if [ -e /usr/bin/apt-get ] ; then
      PACKAGES="clang gcc lsb-release python3"
      if [ ${USE_PACKAGING} -eq 1 ] ; then
         # Need to install pbuilder as well:
         PACKAGES="${PACKAGES} build-essential devscripts eatmydata fakeroot lintian pbuilder"
      fi

      apt update -qq
      # DEBIAN_FRONTEND=noninteractive apt dist-upgrade -qy
      DEBIAN_FRONTEND=noninteractive apt-get install -qy  -o Dpkg::Options::=--force-confold -o Dpkg::Options::=--force-confdef --no-install-recommends \
         ${PACKAGES}

      if [ ${USE_PACKAGING} -eq 1 ] ; then
         # ====== pbuilder environment ======================================
         distribution=`lsb_release -cs`
         cores=`getconf _NPROCESSORS_ONLN 2>/dev/null || true`
         cat >/etc/pbuilderrc <<EOF
DISTRIBUTION="${distribution}"
COMPONENTS="main universe"
APTCACHEHARDLINK=no
EXTRAPACKAGES=eatmydata
EATMYDATA=yes
# Multi-core: set concurrency level. The packaging scripts will handle it properly:
export CONCURRENCY_LEVEL=${cores}
export DEB_BUILD_OPTIONS="parallel=${cores}"
EOF
         cat /etc/pbuilderrc
         eatmydata pbuilder create --debootstrapopts --variant=buildd

         # ====== Add ppa:dreibh/ppa, updates and backports =================
         if [ "${VARIANT}" == "ubuntu" ] ; then
            # Add PPA dreibh/ppa for Ubuntu:
            eatmydata pbuilder login --save-after-login <<EOF
DEBIAN_FRONTEND=noninteractive apt-get install -y -o Dpkg::Options::=--force-confold -o Dpkg::Options::=--force-confdef --no-install-recommends \
   software-properties-common
apt-add-repository -y ppa:dreibh/ppa
apt update
EOF
         fi

      fi


   # ====== Fedora ==========================================================
   elif [ -e /usr/bin/dnf ] ; then
      PACKAGES="python3 redhat-lsb-core"

      # dnf upgrade -qy
      dnf install -qy make clang \
         ${PACKAGES}


   # ====== Unknown =========================================================
   else
      echo >&2 "ERROR: Unknown Linux distribution!"
      exit 1
   fi

# ###### FreeBSD ############################################################
elif [ "${UNAME}" == "FreeBSD" ] ; then

   env ASSUME_ALWAYS_YES=yes pkg install -y bash gcc git python3

   # Ports collection:
   # This is the slow method via portsnap:
   # portsnap --interactive fetch extract | grep -v ^/usr/ports
   # Using Git is much faster:
   rm -rf /usr/ports
   git clone --depth=1 https://github.com/freebsd/freebsd-ports /usr/ports

# ###### Unknown ############################################################
else

   echo >&2 "ERROR: Unexpected system ${UNAME}!"
   exit 1

fi
